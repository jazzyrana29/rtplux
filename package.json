{
  "name": "rtplux",
  "version": "1.0.0",
  "main": "expo-router/entry",
  "scripts": {
    "start": "expo start --reset-cache",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web --reset-cache",
    "build": "expo build",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "type-check": "tsc --noEmit",
    "pack:assets": "ts-node scripts/pack-assets.ts",
    "clean:assets": "rimraf public/assets/games",
    "build:assets": "npm run clean:assets && ts-node scripts/pack-assets.ts",
    "test": "playwright test",
    "test:headed": "playwright test --headed",
    "test:debug": "playwright test --debug",
    "test:mobile": "playwright test --grep @mobile",
    "test:desktop": "playwright test --grep @desktop",
    "test:cross-device": "playwright test --grep @cross-device",
    "test:accessibility": "playwright test --grep @accessibility",
    "test:performance": "playwright test --grep @performance",
    "test:ui": "playwright test --ui",
    "test:report": "playwright show-report",
    "test:install": "playwright install",
    "test:headless": "playwright test --config=playwright.config.headless.ts",
    "test:docker": "bash scripts/run-tests-docker.sh",
    "test:docker:mobile": "bash scripts/run-tests-docker.sh mobile",
    "test:docker:desktop": "bash scripts/run-tests-docker.sh desktop",
    "test:docker:accessibility": "docker-compose -f docker-compose.playwright.yml run --rm playwright-accessibility",
    "test:docker:performance": "docker-compose -f docker-compose.playwright.yml run --rm playwright-performance",
    "test:docker:visual": "docker-compose -f docker-compose.playwright.yml run --rm playwright-visual",
    "setup:playwright": "bash scripts/setup-playwright.sh",
    "setup:playwright:deps": "bash scripts/setup-playwright.sh --deps-only",
    "setup:playwright:test": "bash scripts/setup-playwright.sh --test",
    "setup:docker": "bash scripts/docker-setup.sh",
    "setup:quick": "bash scripts/quick-test-setup.sh",
    "setup:permissions": "find . -name '*.sh' -exec chmod +x {} \\;",
    "docker:dev": "docker-compose up -d",
    "docker:prod": "docker-compose --profile production up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:build": "docker-compose build",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "docker:help": "bash scripts/docker-commands.sh",
    "postinstall": "npm run setup:permissions"
  },
  "dependencies": {
    "@playwright/test": "^1.53.1",
    "@react-native-async-storage/async-storage": "^2.2.0",
    "@react-navigation/bottom-tabs": "^6.5.0",
    "@react-navigation/native": "^6.1.0",
    "@react-navigation/stack": "^6.3.0",
    "@sentry/react-native": "^5.15.0",
    "expo": "~50.0.0",
    "expo-router": "~3.4.0",
    "framer-motion": "^10.18.0",
    "i18next": "^23.16.8",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-resources-to-backend": "^1.2.1",
    "nativewind": "^4.0.1",
    "next": "^15.3.4",
    "phaser": "^3.90.0",
    "posthog-react-native": "^3.16.1",
    "react": "18.3.1",
    "react-dom": "^18.3.1",
    "react-i18next": "^13.5.0",
    "react-native": "0.73.0",
    "react-native-device-info": "^14.0.4",
    "react-native-dotenv": "^3.4.11",
    "react-native-gesture-handler": "~2.14.0",
    "react-native-reanimated": "~3.6.0",
    "react-native-safe-area-context": "4.8.2",
    "react-native-screens": "~3.29.0",
    "react-native-web": "~0.19.0",
    "react-native-webview": "^13.15.0",
    "tailwindcss-animate": "^1.0.7",
    "zustand": "^4.4.0"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@testing-library/react-native": "^12.4.0",
    "@types/node": "^20.4.2",
    "@types/react": "~18.3.0",
    "@types/react-dom": "^19.1.6",
    "@types/react-native": "~0.73.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.57.0",
    "free-tex-packer-core": "^0.3.4",
    "jest": "^29.2.1",
    "prettier": "^3.5.3",
    "sharp": "^0.32.0",
    "tailwindcss": "3.3.2",
    "texturepacker-cli": "^0.0.25",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6"
  },
  "jest": {
    "preset": "react-native",
    "setupFilesAfterEnv": [
      "<rootDir>/jest.setup.js"
    ]
  }
}
